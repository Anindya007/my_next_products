import React,{useEffect} from 'react';
import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import { Table } from "@mui/material";
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import type { InferGetServerSidePropsType, GetStaticProps } from 'next';
import axios from 'axios';
import Modal from '@mui/material/Modal';

 
type Repo = {
  id: string,
  title:string,
  price:number,
  description:string,
  category:string,
  image:string,
  rating:{
    rate:number,
    count:number
  }
  
}
 
export const getStaticProps = (async (context) => {
  const {data} = await axios.get('https://fakestoreapi.com/products')
  const repo = data
  //console.log(repo)
  return { props: { repo } }
}) satisfies GetStaticProps<{
  repo: Repo[]
}>
 

export default function Home({
  repo,
}: InferGetServerSidePropsType<typeof getStaticProps>) {

  const [open, setOpen] = React.useState(false);
  const [imageSrc,setImageSrc] = React.useState("")
  const handleOpen = () => setOpen(true);
  const handleClose = () => setOpen(false);


  useEffect(() => {
    handleOpen()
  },[imageSrc])

  const handleRowClick = (id: string) => {
    //alert(id)
    const imagePath = repo.find((r:Repo) => r.id === id).image
    setImageSrc(imagePath)
  }


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main}`}>
      <TableContainer component={Paper}>
      <Table sx={{ minWidth: 650 }} aria-label="simple table">
        <TableHead>
          <TableRow>
            <TableCell>Id</TableCell>
            <TableCell align="right">Title</TableCell>
            <TableCell align="right">Price</TableCell>
            <TableCell align="right">Description</TableCell>
            <TableCell align="right">Category</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {repo?.map((r:Repo) => (
            <TableRow
              key={r.id}
              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
              onClick={(e) => handleRowClick(r.id)}
            >
              {/* <TableCell component="th" scope="row">
                {row.name}
              </TableCell> */}
              <TableCell align="right">{r.id}</TableCell>
              <TableCell align="right">{r.title}</TableCell>
              <TableCell align="right">{r.price}</TableCell>
              <TableCell align="right">{r.description}</TableCell>
              <TableCell align="right">{r.category}</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </TableContainer>
<Modal
  open={open && imageSrc !== ""}
  onClose={handleClose}
  aria-labelledby="modal-modal-title"
  aria-describedby="modal-modal-description"
>
 <Image src={imageSrc}
      alt="Picture"
      width={500}
      height={500}
      /> 
</Modal>
    </main>      
    </>
  );
}

